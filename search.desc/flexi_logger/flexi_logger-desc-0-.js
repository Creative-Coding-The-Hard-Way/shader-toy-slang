searchState.loadedDescShard("flexi_logger", 0, "A flexible and easy-to-use logger that writes logs to …\nHelps to use coloring only if the output goes to a tty.\nThe age after which a log file rotation will be triggered, …\nRotate the log file when it has become older than the …\nRotate the file when it has either become older than the …\nAll messages are duplicated.\nSame as <code>AsyncWith</code>, using default values for all parameters.\nLog lines are sent through an unbounded channel to an …\nSame as <code>BufferAndFlushWith</code> with default capacity (…\nBuffer and flush with given buffer capacity and flush …\nSame as <code>BufferDontFlushWith</code> with default capacity (…\nBuffer with given buffer capacity, but don’t flush.\nDefines the strategy for handling older log files.\nCriterion when to rotate the log file.\nChooses between the first format function (which is …\nDefault buffer capacity (8k), when buffering is used.\nDefault flush interval (1s), when flushing is used.\nDefault capacity for the message buffers; a higher value …\nDefault size of the message pool; a higher value could …\nRotate the log file when the local clock has started a new …\nThe “debug” level.\nCorresponds to the <code>Debug</code> log level.\nError, warn, info, and debug messages are duplicated.\nChooses between <code>default_format</code> and <code>colored_default_format</code>.\nDeferred timestamp creation.\nChooses between <code>detailed_format</code> and <code>colored_detailed_format</code>…\nDon’t write <code>flexi_logger</code>’s own error messages.\nDo not buffer (default).\nUsed to control which messages are to be duplicated to …\nThe “error” level.\nCorresponds to the <code>Error</code> log level.\nOnly error messages are duplicated.\nEnum for defining the output channel for <code>flexi_logger</code>’s …\nWrite <code>flexi_logger</code>’s own error messages to the specified …\nBuilder object for specifying the name and path of the log …\nDescribes errors in the initialization of <code>flexi_logger</code>.\nFunction type for format functions.\nRotate the log file when the local clock has started a new …\nThe “info” level.\nCorresponds to the <code>Info</code> log level.\nError, warn, and info messages are duplicated.\nThe specified number of rotated log files are kept. Older …\nRe-exports from log crate An enum representing the …\nRe-exports from log crate An enum representing the …\nInvalid level filter.\nLogger initialization failed.\nBuilder for <code>LogSpecification</code>.\nImmutable struct that defines which loglines are to be …\nUsed in <code>LoggerHandle::existing_log_files</code>.\nThe entry-point for using <code>flexi_logger</code>.\nAllows reconfiguring the logger while the program is …\nRotate the log file when the local clock has started a new …\nDefines which loglevel filter to use for the specified …\nThe naming convention for rotated log files.\nOlder log files are not touched - they remain for ever.\nMethod not possible because duplication is not possible.\nMethod not possible because no file logger is configured.\nNo messages are duplicated.\nLogs are written to a file with infix <code>rCURRENT</code>.\nLogs are written to a file with a number-infix, like …\nA level lower than all log levels.\nChooses between <code>opt_format</code> and <code>colored_opt_format</code>.\nLog file cannot be written because the specified path is …\nLog file cannot be written because the specified path is a …\nSpawning the cleanup thread failed.\nLog cannot be written, e.g. because the configured output …\nPalette parsing failed\nFailed to parse log specification.\nSome synchronization object is poisoned.\nRe-exports from log crate The “payload” of a log …\nChosen reset not possible.\nRotate the log file when the local clock has started a new …\nLogger is shut down.\nRotate the log file when it exceeds the specified size in …\nWrite <code>flexi_logger</code>’s own error messages to <code>stderr</code>.\nWrite <code>flexi_logger</code>’s own error messages to <code>stdout</code>.\nDo not buffer and support <code>cargo test</code>’s capture.\nTime stamp format that is used by the provided format …\nLogs are written to a file with infix <code>rCURRENT</code>.\nDefines the infixes for the file to which the logs are …\nLogs are written to a file with a timestamp-infix, like …\nThe “trace” level.\nCorresponds to the <code>Trace</code> log level.\nAll messages are duplicated.\nThe “warn” level.\nCorresponds to the <code>Warn</code> log level.\nError and warn messages are duplicated.\nChooses between <code>with_thread</code> and <code>colored_with_thread</code>.\nDescribes whether the log output should be written …\nAllows re-configuring duplication to stderr.\nAllows re-configuring duplication to stdout.\nMakes the logger use the specified format for messages …\nMakes the logger use the specified format for messages …\nRegisters a <code>LogWriter</code> implementation under the given …\nMakes the logger append to the specified output file, if …\nThe message body.\nDerives a <code>PathBuf</code> from the spec and the given infix.\nReturns the string representation of the <code>Level</code>.\nReturns the string representation of the <code>LevelFilter</code>.\nThe specified String is used as the basename of the log …\nBuilds a boxed logger and a <code>LoggerHandle</code> for it, but does …\nCreates a log specification without being consumed.\nCreates a log specification without being consumed, …\nReturns a new builder.\nCreates a <code>LogSpecBuilder</code>, which allows building a log spec …\nWhen <code>Logger::rotate</code> is used with some <code>Cleanup</code> variant …\nExamples for the <code>flexi_logger</code> initialization.\nA colored version of the logline-formatter <code>default_format</code>.\nA colored version of the logline-formatter <code>detailed_format</code>.\nA colored version of the logline-formatter <code>opt_format</code>.\nA colored version of the logline-formatter <code>with_thread</code>.\nThe specified path will be used on unix systems to create …\nReturns a <code>LogSpecification</code> where the global tracelevel is …\nSelects plain log files without the <code>rCURRENT</code> file.\nAdds a default log level filter, or updates the default …\nDescribes a file in the current folder, using, as its …\nA logline-formatter that produces log lines like  …\nA logline-formatter that produces log lines like  …\nSpecifies a folder for the log files.\nThe specified String is added to the log file name.\nLog is processed, including duplication, but not written …\nMakes the logger write messages with the specified minimum …\nMakes the logger write messages with the specified minimum …\nReturns true if messages on the specified level from the …\nReturns a log specification based on the value of the …\nReturns a log specification based on the value of the …\nReturns a <code>LogSpecification</code> where the global tracelevel is …\nDefine the output channel for <code>flexi_logger</code>’s own error …\nError codes of <code>flexi_logger</code>.\nReturns the list of existing log files according to the …\nThe source file containing the message.\nThe source file containing the message, if it is a <code>&#39;static</code> …\nThis module contains two traits which allow adding a …\nApply the provided filter before really writing log lines.\nCreates a log specification without text filter.\nCreates a log specification with text filter.\nFlush all writers.\nReturns the current configuration of the file log writer.\nEnforce the use of UTC rather than local time.\nMakes the logger use the provided format function for all …\nProduces a preformatted object suitable for printing.\nMakes the logger use the provided format function for …\nMakes the logger use the provided format function for …\nMakes the logger use the provided format function to …\nAllows specifying a format function for an additional …\nPrints itself in a format compliant with RFC 3339.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCreates a <code>LogSpecBuilder</code> from given module filters.\nReturns a <code>LogSpecification</code> where the global tracelevel is …\nShortest form to get started.\nAdds log level filters from a <code>LogSpecification</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nIterate through all supported logging levels.\nIterate through all supported filtering levels.\nThe verbosity level of the message.\nThe level filter.\nThe line containing the message.\nLog is written to a file.\nLog is written to a file, as with <code>Logger::log_to_file</code>, <em>and</em> …\nLog is written to stderr (which is the default).\nLog is written to stdout.\nLog is written to the provided writer.\nReturns the most verbose logging level.\nReturns the most verbose logging level filter.\nMetadata about the log directive.\nAdds a log level filter, or updates the log level filter, …\nProvides a reference to the module filters.\nThe module name.\nThe module path of the message.\nThe module path of the message, if it is a <code>&#39;static</code> string.\nConstructs a new instance, but does not generate the …\nCreates a <code>LogSpecBuilder</code> with all logging turned off.\nSelects no file at all.\nRetrieve the timestamp for local time zone.\nRetrieve the UTC timestamp.\nIf append is set to true, makes the logger append to the …\nThe specified String is used as the basename of the log …\nIf a String is specified, it will be used on unix systems …\nSpecifies a folder for the log files.\nThe specified String is added to the log file name.\nWith true, makes the logger print an info message to …\nBy default, and with None, the log file will grow …\nSpecifies a suffix for the log files, or supresses the use …\nReturns a <code>LogSpecification</code> where all log output is …\nA logline-formatter that produces log lines with timestamp …\nDecides what <code>flexi_logger</code> should do if the error output …\nReturns a log specification from a String.\nTries to replace the active <code>LogSpecification</code> with the …\nTries to replace the active <code>LogSpecification</code> with the …\nReverts to the previous <code>LogSpecification</code>, if any.\nMakes the logger print an info message to stdout with the …\nReplaces the active <code>LogSpecification</code> and pushes the …\nAdds a log level filter, or updates the log level filter, …\nMakes the logger re-open the current log file.\nReplaces parts of the configuration of the file log writer.\nPrevent indefinite growth of the log file by applying file …\nReplaces the active <code>LogSpecification</code>.\nSets the color palette for function <code>style</code>, which is used …\nShutdown all participating writers.\nConsumes the Logger object and initializes <code>flexi_logger</code>.\nHelper function that is used in the provided coloring …\nSpecifies a suffix for the log files.\nMakes the logger not include a basename into the names of …\nMakes the logger not include the start time into the names …\nThe name of the target of the directive.\nProvides a reference to the text filter.\nConverts <code>self</code> to the equivalent <code>Level</code>.\nConverts the <code>Level</code> to the equivalent <code>LevelFilter</code>.\nReturns a <code>LogSpecification</code> where the global tracelevel is …\nTrigger an extra log file rotation.\nThe provided path should describe a log file. If it …\nCreates a Logger that reads the <code>LogSpecification</code> from the …\nCreates a Logger that reads the <code>LogSpecification</code> from the …\nCreates a Logger that reads the <code>LogSpecification</code> from a …\nDefines if the start time should be included into the …\nMakes the logger use UTC timestamps rather than local …\nUse Windows line endings, rather than just <code>\\n</code>.\nReturns a <code>LogSpecification</code> where the global tracelevel is …\nCreates a Logger that you provide with an explicit …\nSelects additionally the compressed log files.\nSelects additionally a custom “current” file.\nSelects additionally the <code>rCURRENT</code> file.\nA logline-formatter that produces log lines like  …\nSets the write mode for the logger.\nDescribes how to extend <code>flexi_logger</code> with additional log …\nControls if a special infix is used for the file to which …\nThe format of the timestamp infix.\nThe interval for flushing the output.\nCapacity of an individual message buffer.\nCapacity of the pool for the message buffers.\nTrait of the filter object.\nWrite out a single log line\nEach log line that <code>flexi_logger</code> would write to the …\nWrite out a log line to the configured output channel.\nA shareable <code>FileLogWriter</code> with a handle.\nA configurable <code>LogWriter</code> implementation that writes to a …\nBuilder for <code>FileLogWriter</code>.\nConfiguration of a <code>FileLogWriter</code>.\nHandle to the <code>FileLogWriter</code> in an <code>ArcFileLogWriter</code> that …\nWrites to a single log output stream.\nMakes the logger append to the given file, if it exists; …\nReturns <code>true</code> if existing files are appended on program …\nReturns the configured <code>basename</code> of the log file.\nInstantiates a builder for <code>FileLogWriter</code>.\nInfluences how the cleanup activities (finding files, …\nReturns the current configuration of the file log writer\nThe specified String will be used on unix systems to …\nReturns the configured directory.\nReturns the configured <code>discriminant</code>.\nReturns the list of existing log files according to the …\nFlushes any buffered records.\nMakes the <code>FileLogWriter</code> use the provided format function …\nSets the format function.\nSets the format function.\nReturns a reference to its configured output format …\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nSet the maximum log level.\nProvides the maximum log level that is to be written.\nProvides the maximum log level that is to be written.\nIf append is set to true, makes the logger append to the …\nIf a String is specified, it will be used on unix systems …\nWith true, makes the <code>FileLogWriterBuilder</code> print an info …\nBy default, and with None, the log file will grow …\nMakes the <code>FileLogWriter</code> print an info message to stdout …\nReturns <code>true</code> if a message should be printed on program …\nRe-open the current output, if meaningful.\nRe-open the current output, if meaningful.\nMakes the <code>FileLogWriter</code> re-open the current log file.\nReplaces parts of the configuration of the file log writer.\nUse rotation to prevent indefinite growth of log files.\nRotate the current output, if meaningful.\nRotate the current output, if meaningful.\nTrigger an extra log file rotation.\nCleanup open resources, if necessary.\nCleanup open resources, if necessary.\nReturns the configured <code>suffix</code>.\nProduces the <code>FileLogWriter</code>.\nProduces the <code>FileLogWriter</code> and a handle that is connected …\nEnforces the use of UTC, rather than local time.\nReturns <code>true</code> if UTC is enforced.\nUse Windows line endings, rather than just <code>\\n</code>.\nWrites out a log line.\nSets the write mode for the <code>FileLogWriter</code>.")
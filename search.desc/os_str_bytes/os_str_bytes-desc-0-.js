searchState.loadedDescShard("os_str_bytes", 0, "This crate provides additional functionality for <code>OsStr</code> and …\nA container for platform strings containing no unicode …\nA platform agnostic variant of <code>OsStrExt</code>.\nAn extension trait providing additional methods to <code>OsStr</code>.\nA platform agnostic variant of <code>OsStringExt</code>.\nAllows a type to be used for searching by <code>RawOsStr</code> and …\nA container providing additional functionality for <code>OsStr</code>.\nExtensions to <code>Cow&lt;RawOsStr&gt;</code> for additional conversions.\nA container for owned byte strings converted by this crate.\nEquivalent to <code>OsStr::as_encoded_bytes</code>.\nConverts this representation back to a platform-native …\nConverts this representation back to a platform-native …\nEquivalent to <code>String::clear</code>.\nEquivalent to <code>str::contains</code>.\nEquivalent to <code>OsStrBytesExt::contains</code>.\nEquivalent to <code>str::ends_with</code>.\nEquivalent to <code>OsStrBytesExt::ends_with</code>.\nEquivalent to <code>str::find</code>.\nEquivalent to <code>OsStrBytesExt::find</code>.\nReturns the argument unchanged.\nEquivalent to <code>OsStr::from_encoded_bytes_unchecked</code>.\nEquivalent to <code>OsString::from_encoded_bytes_unchecked</code>.\nConverts a byte string into an equivalent platform-native …\nConverts a byte string into an equivalent platform-native …\nConverts a platform-native string back to this …\nWraps a platform-native string, without copying or …\nWraps a string, without copying or encoding conversion.\nWraps a string, without copying or encoding conversion.\nEquivalent to <code>str::get_unchecked</code>.\nEquivalent to <code>OsStrBytesExt::get_unchecked</code>.\nEquivalent to the <code>Index::index</code> implementation for <code>str</code>.\nCalls <code>U::from(self)</code>.\nEquivalent to <code>String::into_boxed_str</code>.\nEquivalent to <code>OsString::into_encoded_bytes</code>.\nConverts a platform-native string into an equivalent byte …\nConverts a platform-native string into an equivalent byte …\nConverts this representation back to a platform-native …\nConverts this representation back to a platform-native …\nEquivalent to <code>OsString::into_string</code>.\nEquivalent to <code>OsStr::is_empty</code>.\nIterators provided by this crate.\nWraps a platform-native string, without copying or …\nWraps a platform-native string, without copying or …\nEquivalent to <code>str::repeat</code>.\nEquivalent to <code>OsStrBytesExt::repeat</code>.\nEquivalent to <code>str::rfind</code>.\nEquivalent to <code>OsStrBytesExt::rfind</code>.\nEquivalent to <code>str::rsplit</code>, but empty patterns are not …\nEquivalent to <code>OsStrBytesExt::rsplit</code>.\nEquivalent to <code>str::rsplit_once</code>.\nEquivalent to <code>OsStrBytesExt::rsplit_once</code>.\nEquivalent to <code>String::shrink_to_fit</code>.\nEquivalent to <code>str::split</code>, but empty patterns are not …\nEquivalent to <code>OsStrBytesExt::split</code>.\nEquivalent to <code>str::split_at</code>.\nEquivalent to <code>OsStrBytesExt::split_at</code>.\nEquivalent to <code>String::split_off</code>.\nEquivalent to <code>str::split_once</code>.\nEquivalent to <code>OsStrBytesExt::split_once</code>.\nEquivalent to <code>str::starts_with</code>.\nEquivalent to <code>OsStrBytesExt::starts_with</code>.\nEquivalent to <code>str::strip_prefix</code>.\nEquivalent to <code>OsStrBytesExt::strip_prefix</code>.\nEquivalent to <code>str::strip_suffix</code>.\nEquivalent to <code>OsStrBytesExt::strip_suffix</code>.\nConverts a platform-native string into an equivalent byte …\nConverts a platform-native string into an equivalent byte …\nConverts this representation back to a platform-native …\nEquivalent to <code>OsStr::to_str</code>.\nEquivalent to <code>OsStr::to_string_lossy</code>.\nEquivalent to <code>str::trim_end_matches</code>.\nEquivalent to <code>OsStrBytesExt::trim_end_matches</code>.\nEquivalent to <code>str::trim_matches</code>.\nEquivalent to <code>OsStrBytesExt::trim_matches</code>.\nEquivalent to <code>str::trim_start_matches</code>.\nEquivalent to <code>OsStrBytesExt::trim_start_matches</code>.\nEquivalent to <code>String::truncate</code>.\nSplits this string into platform and UTF-8 substrings.\nEquivalent to <code>OsStrBytesExt::utf8_chunks</code>.\nThe iterator returned by <code>OsStrBytesExt::rsplit</code>.\nThe iterator returned by <code>RawOsStr::rsplit</code>.\nThe iterator returned by <code>RawOsStr::split</code>.\nThe iterator returned by <code>OsStrBytesExt::split</code>.\nThe iterator returned by <code>OsStrBytesExt::utf8_chunks</code>.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.")
searchState.loadedDescShard("rustix", 0, "<code>rustix</code> provides efficient memory-safe and I/O-safe …\nA macro for <code>CStr</code> literals.\nExport the <code>*Fd</code> types and traits that are used in rustix’…\nUtilities related to FFI bindings.\nI/O operations.\nTerminal I/O stream operations.\nA trait to borrow the file descriptor from an underlying …\nA trait to extract the raw file descriptor from an …\nA borrowed file descriptor.\nA trait to express the ability to construct an object from …\nA trait to express the ability to consume an object and …\nAn owned file descriptor.\nRaw file descriptors.\nBorrows the file descriptor.\nExtracts the raw file descriptor.\nReturns a <code>BorrowedFd</code> holding the given raw file descriptor.\nTakes ownership of a <code>UnixListener</code>’s socket file …\nTakes ownership of a <code>ChildStdout</code>’s file descriptor.\nTakes ownership of a <code>TcpListener</code>’s socket file …\nTakes ownership of a <code>UdpSocket</code>’s file descriptor.\nReturns the argument unchanged.\nTakes ownership of a <code>UnixDatagram</code>’s socket file …\nTakes ownership of a <code>File</code>’s underlying file descriptor.\nTakes ownership of a <code>ChildStderr</code>’s file descriptor.\nTakes ownership of a <code>UnixStream</code>’s socket file descriptor.\nTakes ownership of a <code>ChildStdin</code>’s file descriptor.\nTakes ownership of a <code>TcpStream</code>’s socket file descriptor.\nReturns the argument unchanged.\nConstructs a new instance of <code>Self</code> from the given raw file …\nConstructs a new instance of <code>Self</code> from the given raw file …\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nConsumes this object, returning the raw underlying file …\nCreates a new <code>OwnedFd</code> instance that shares the same …\nCreates a new <code>OwnedFd</code> instance that shares the same …\nRepresentation of a borrowed C string.\nA type representing an owned, C-compatible, nul-terminated …\nAn error indicating that a nul byte was not in the …\nAn error indicating that an interior nul byte was found.\nReturns the contents of this <code>CString</code> as a slice of bytes.\nEquivalent to <code>CString::as_bytes()</code> except that the returned …\nExtracts a <code>CStr</code> slice containing the entire string.\nReturns the inner pointer to this C string.\nIterates over the bytes in this C string.\nEquivalent to C’s <code>char</code> type.\nReturns the length of <code>self</code>. Like C’s <code>strlen</code>, this does …\nCreates an empty <code>CString</code>.\nConverts a Vec&lt;NonZero&lt;u8&gt;&gt; into a <code>CString</code> without copying …\nConverts a Box&lt;CStr&gt; into a <code>CString</code> without copying or …\nConverts a <code>Cow&lt;&#39;a, CStr&gt;</code> into a <code>CString</code>, by copying the …\nReturns the argument unchanged.\nConverts a &amp;CStr into a <code>CString</code> by copying the contents …\nReturns the argument unchanged.\nReturns the argument unchanged.\nCreates a C string wrapper from a byte slice with any …\nCreates a C string wrapper from a byte slice with exactly …\nUnsafely creates a C string wrapper from a byte slice.\nWraps a raw C string with a safe C string wrapper.\nRetakes ownership of a <code>CString</code> that was transferred to C …\nCreates a C-compatible string by consuming a byte vector, …\nAttempts to converts a Vec&lt;u8&gt; to a <code>CString</code>.\nConverts a Vec&lt;u8&gt; to a <code>CString</code> without checking the …\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nConverts this <code>CString</code> into a boxed <code>CStr</code>.\nConsumes the <code>CString</code> and returns the underlying byte …\nEquivalent to <code>CString::into_bytes()</code> except that the …\nConverts a Box&lt;CStr&gt; into a <code>CString</code> without copying or …\nConsumes the <code>CString</code> and transfers ownership of the string …\nConverts the <code>CString</code> into a <code>String</code> if it contains valid …\nConsumes this error, returning the underlying vector of …\nReturns <code>true</code> if <code>self.to_bytes()</code> has a length of 0.\nCreates a new C-compatible string from a container of …\nReturns the position of the nul byte in the slice that …\nConverts this C string to a byte slice.\nConverts this C string to a byte slice containing the …\nYields a &amp;str slice if the <code>CStr</code> contains valid UTF-8.\nConverts a <code>CStr</code> into a Cow&lt;str&gt;.\n<code>EACCES</code>\n<code>EADDRINUSE</code>\n<code>EADDRNOTAVAIL</code>\n<code>EADV</code>\n<code>EAFNOSUPPORT</code>\n<code>EAGAIN</code>\n<code>EALREADY</code>\n<code>RWF_APPEND</code> (since Linux 4.16)\n<code>EBADE</code>\n<code>EBADF</code>\n<code>EBADFD</code>\n<code>EBADMSG</code>\n<code>EBADR</code>\n<code>EBADRQC</code>\n<code>EBADSLT</code>\n<code>EBFONT</code>\n<code>EBUSY</code>\n<code>ECANCELED</code>\n<code>ECHILD</code>\n<code>ECHRNG</code>\n<code>FD_CLOEXEC</code>\n<code>O_CLOEXEC</code>\n<code>O_CLOEXEC</code>\n<code>EFD_CLOEXEC</code>\n<code>ECOMM</code>\n<code>ECONNABORTED</code>\n<code>ECONNREFUSED</code>\n<code>ECONNRESET</code>\nSets the offset to the current position plus the specified …\n<code>EDEADLK</code>\n<code>EDEADLOCK</code>\n<code>EDESTADDRREQ</code>\n<code>O_DIRECT</code>\n<code>EDOM</code>\n<code>EDOTDOT</code>\n<code>EDQUOT</code>\n<code>RWF_DSYNC</code> (since Linux 4.7)\nSets the offset to the current position plus the specified …\n<code>O_*</code> constants for use with <code>dup2</code>.\n<code>POLLERR</code>\n<code>EEXIST</code>\nSets the offset to the size of this object plus the …\nContains the error value\n<code>errno</code>—An error code.\n<code>EFD_*</code> flags for use with <code>eventfd</code>.\n<code>EFAULT</code>\n<code>EFBIG</code>\n<code>FD_*</code> constants for use with <code>fcntl_getfd</code> and <code>fcntl_setfd</code>.\n<code>SPLICE_F_GIFT</code>\n<code>RWF_HIPRI</code> (since Linux 4.6)\n<code>EHOSTDOWN</code>\n<code>EHOSTUNREACH</code>\n<code>POLLHUP</code>\n<code>EHWPOISON</code>\nSets the offset to the current position plus the specified …\n<code>EIDRM</code>\n<code>EILSEQ</code>\n<code>POLLIN</code>\n<code>EINPROGRESS</code>\n<code>EINTR</code>.\n<code>EINVAL</code>\n<code>EIO</code>\n<code>EISCONN</code>\n<code>EISDIR</code>\n<code>EISNAM</code>\nA buffer type used with <code>Write::write_vectored</code>.\nA buffer type used with <code>Read::read_vectored</code>.\nA buffer type used with <code>vmsplice</code>. It is guaranteed to be …\n<code>EKEYEXPIRED</code>\n<code>EKEYREJECTED</code>\n<code>EKEYREVOKED</code>\n<code>EL2HLT</code>\n<code>EL2NSYNC</code>\n<code>EL3HLT</code>\n<code>EL3RST</code>\n<code>ELIBACC</code>\n<code>ELIBBAD</code>\n<code>ELIBEXEC</code>\n<code>ELIBMAX</code>\n<code>ELIBSCN</code>\n<code>ELNRNG</code>\n<code>ELOOP</code>\n<code>EMEDIUMTYPE</code>\n<code>EMFILE</code>\n<code>EMLINK</code>\n<code>SPLICE_F_MORE</code>\n<code>SPLICE_F_MOVE</code>\n<code>EMSGSIZE</code>\n<code>EMULTIHOP</code>\n<code>ENAMETOOLONG</code>\n<code>ENAVAIL</code>\n<code>ENETDOWN</code>\n<code>ENETRESET</code>\n<code>ENETUNREACH</code>\n<code>ENFILE</code>\n<code>ENOANO</code>\n<code>ENOBUFS</code>\n<code>ENOCSI</code>\n<code>ENODATA</code>\n<code>ENODEV</code>\n<code>ENOENT</code>\n<code>ENOEXEC</code>\n<code>ENOKEY</code>\n<code>ENOLCK</code>\n<code>ENOLINK</code>\n<code>ENOMEDIUM</code>\n<code>ENOMEM</code>\n<code>ENOMSG</code>\n<code>SPLICE_F_NONBLOCK</code>\n<code>O_NONBLOCK</code>\n<code>EFD_NONBLOCK</code>\n<code>ENONET</code>\n<code>ENOPKG</code>\n<code>ENOPROTOOPT</code>\n<code>ENOSPC</code>\n<code>ENOSR</code>\n<code>ENOSTR</code>\n<code>ENOSYS</code>\n<code>ENOTBLK</code>\n<code>ENOTCONN</code>\n<code>ENOTDIR</code>\n<code>ENOTEMPTY</code>\n<code>ENOTNAM</code>\n<code>ENOTRECOVERABLE</code>\n<code>ENOTSOCK</code>\n<code>ENOTSUP</code>\n<code>ENOTTY</code>\n<code>ENOTUNIQ</code>\n<code>RWF_NOWAIT</code> (since Linux 4.14)\n<code>POLLNVAL</code>\n<code>ENXIO</code>\n<code>EOPNOTSUPP</code>\n<code>POLLOUT</code>\n<code>EOVERFLOW</code>\n<code>EOWNERDEAD</code>\nContains the success value\n<code>EPERM</code>\n<code>EPFNOSUPPORT</code>\n<code>EPIPE</code>\n<code>PIPE_BUF</code>—The maximum length at which writes to a pipe …\n<code>POLLPRI</code>\n<code>EPROTO</code>\n<code>EPROTONOSUPPORT</code>\n<code>EPROTOTYPE</code>\n<code>O_*</code> constants for use with <code>pipe_with</code>.\n<code>struct pollfd</code>—File descriptor and flags for use with <code>poll</code>…\n<code>POLL*</code> flags for use with <code>poll</code>.\n<code>ERANGE</code>\n<code>POLLRDBAND</code>\n<code>POLLRDHUP</code>\n<code>POLLRDNORM</code>\n<code>EREMCHG</code>\n<code>EREMOTE</code>\n<code>EREMOTEIO</code>\n<code>ERESTART</code>\n<code>ERFKILL</code>\n<code>EROFS</code>\n<code>RWF_*</code> constants for use with <code>preadv2</code> and <code>pwritev2</code>.\nA specialized <code>Result</code> type for <code>rustix</code> APIs.\n<code>EFD_SEMAPHORE</code>\n<code>ESHUTDOWN</code>\n<code>ESOCKTNOSUPPORT</code>\n<code>ESPIPE</code>\n<code>ESRCH</code>\n<code>ESRMNT</code>\n<code>ESTALE</code>\n<code>ESTRPIPE</code>\n<code>RWF_SYNC</code> (since Linux 4.7)\nEnumeration of possible methods to seek within an I/O …\n<code>SPLICE_F_*</code> constants for use with [<code>splice</code>] and [<code>vmsplice</code>].\nSets the offset to the provided number of bytes.\n<code>ETIME</code>\n<code>ETIMEDOUT</code>\n<code>E2BIG</code>\n<code>ETOOMANYREFS</code>\n<code>ETXTBSY</code>\n<code>EUCLEAN</code>\n<code>EUNATCH</code>\n<code>EUSERS</code>\n<code>EWOULDBLOCK</code>\n<code>POLLWRBAND</code>\n<code>POLLWRNORM</code>\n<code>EXDEV</code>\n<code>EXFULL</code>\nAdvance the internal cursor of the slice.\nAdvance the internal cursor of the slice.\nAdvance a slice of slices.\nAdvance a slice of slices.\nReturns the set containing all flags.\nReturns the set containing all flags.\nReturns the set containing all flags.\nReturns the set containing all flags.\nReturns the set containing all flags.\nReturns the set containing all flags.\nReturns the set containing all flags.\nReturns the intersection between the two sets of flags.\nReturns the intersection between the two sets of flags.\nReturns the intersection between the two sets of flags.\nReturns the intersection between the two sets of flags.\nReturns the intersection between the two sets of flags.\nReturns the intersection between the two sets of flags.\nReturns the intersection between the two sets of flags.\nDisables all flags disabled in the set.\nDisables all flags disabled in the set.\nDisables all flags disabled in the set.\nDisables all flags disabled in the set.\nDisables all flags disabled in the set.\nDisables all flags disabled in the set.\nDisables all flags disabled in the set.\nReturns the union of the two sets of flags.\nReturns the union of the two sets of flags.\nReturns the union of the two sets of flags.\nReturns the union of the two sets of flags.\nReturns the union of the two sets of flags.\nReturns the union of the two sets of flags.\nReturns the union of the two sets of flags.\nAdds the set of flags.\nAdds the set of flags.\nAdds the set of flags.\nAdds the set of flags.\nAdds the set of flags.\nAdds the set of flags.\nAdds the set of flags.\nReturns the raw value of the flags currently stored.\nReturns the raw value of the flags currently stored.\nReturns the raw value of the flags currently stored.\nReturns the raw value of the flags currently stored.\nReturns the raw value of the flags currently stored.\nReturns the raw value of the flags currently stored.\nReturns the raw value of the flags currently stored.\nReturns the left flags, but with all the right flags …\nReturns the left flags, but with all the right flags …\nReturns the left flags, but with all the right flags …\nReturns the left flags, but with all the right flags …\nReturns the left flags, but with all the right flags …\nReturns the left flags, but with all the right flags …\nReturns the left flags, but with all the right flags …\nToggles the set of flags.\nToggles the set of flags.\nToggles the set of flags.\nToggles the set of flags.\nToggles the set of flags.\nToggles the set of flags.\nToggles the set of flags.\nClears the ready events.\n<code>close(raw_fd)</code>—Closes a <code>RawFd</code> directly.\nReturns the complement of this set of flags.\nReturns the complement of this set of flags.\nReturns the complement of this set of flags.\nReturns the complement of this set of flags.\nReturns the complement of this set of flags.\nReturns the complement of this set of flags.\nReturns the complement of this set of flags.\nReturns <code>true</code> if all of the flags in <code>other</code> are contained …\nReturns <code>true</code> if all of the flags in <code>other</code> are contained …\nReturns <code>true</code> if all of the flags in <code>other</code> are contained …\nReturns <code>true</code> if all of the flags in <code>other</code> are contained …\nReturns <code>true</code> if all of the flags in <code>other</code> are contained …\nReturns <code>true</code> if all of the flags in <code>other</code> are contained …\nReturns <code>true</code> if all of the flags in <code>other</code> are contained …\nReturns the difference between the flags in <code>self</code> and <code>other</code>.\nReturns the difference between the flags in <code>self</code> and <code>other</code>.\nReturns the difference between the flags in <code>self</code> and <code>other</code>.\nReturns the difference between the flags in <code>self</code> and <code>other</code>.\nReturns the difference between the flags in <code>self</code> and <code>other</code>.\nReturns the difference between the flags in <code>self</code> and <code>other</code>.\nReturns the difference between the flags in <code>self</code> and <code>other</code>.\n<code>dup(fd)</code>—Creates a new <code>OwnedFd</code> instance that shares the …\n<code>dup2(fd, new)</code>—Changes the file description of a file …\nUtility function to safely <code>dup2</code> over stderr (fd 2).\nUtility function to safely <code>dup2</code> over stdin (fd 0).\nUtility function to safely <code>dup2</code> over stdout (fd 1).\n<code>dup3(fd, new, flags)</code>—Changes the file description of a …\nReturns an empty set of flags.\nReturns an empty set of flags.\nReturns an empty set of flags.\nReturns an empty set of flags.\nReturns an empty set of flags.\nReturns an empty set of flags.\nReturns an empty set of flags.\nepoll support.\n<code>eventfd(initval, flags)</code>—Creates a file descriptor for …\n<code>ioctl(fd, EXT4_IOC_RESIZE_FS, blocks)</code>—Resize ext4 …\n<code>fcntl(fd, F_DUPFD_CLOEXEC)</code>—Creates a new <code>OwnedFd</code> …\n<code>fcntl(fd, F_GETFD)</code>—Returns a file descriptor’s flags.\n<code>fcntl(fd, F_SETFD, flags)</code>—Sets a file descriptor’s …\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nConvert from underlying bit representation, unless that …\nConvert from underlying bit representation, unless that …\nConvert from underlying bit representation, unless that …\nConvert from underlying bit representation, unless that …\nConvert from underlying bit representation, unless that …\nConvert from underlying bit representation, unless that …\nConvert from underlying bit representation, unless that …\nConvert from underlying bit representation, dropping any …\nConvert from underlying bit representation, dropping any …\nConvert from underlying bit representation, dropping any …\nConvert from underlying bit representation, dropping any …\nConvert from underlying bit representation, dropping any …\nConvert from underlying bit representation, dropping any …\nConvert from underlying bit representation, dropping any …\nConvert from underlying bit representation, preserving all …\nConvert from underlying bit representation, preserving all …\nConvert from underlying bit representation, preserving all …\nConvert from underlying bit representation, preserving all …\nConvert from underlying bit representation, preserving all …\nConvert from underlying bit representation, preserving all …\nConvert from underlying bit representation, preserving all …\nConstructs a new <code>PollFd</code> holding <code>fd</code> and <code>events</code>.\nExtract an <code>Errno</code> value from a <code>std::io::Error</code>.\nConstruct an <code>Errno</code> from a raw OS error number.\nCreates a new <code>IoSlice</code> wrapping a byte slice.\nCreates a new <code>IoSlice</code> wrapping a mutable byte slice.\nInserts the specified flags in-place.\nInserts the specified flags in-place.\nInserts the specified flags in-place.\nInserts the specified flags in-place.\nInserts the specified flags in-place.\nInserts the specified flags in-place.\nInserts the specified flags in-place.\nReturns the intersection between the flags in <code>self</code> and …\nReturns the intersection between the flags in <code>self</code> and …\nReturns the intersection between the flags in <code>self</code> and …\nReturns the intersection between the flags in <code>self</code> and …\nReturns the intersection between the flags in <code>self</code> and …\nReturns the intersection between the flags in <code>self</code> and …\nReturns the intersection between the flags in <code>self</code> and …\nReturns <code>true</code> if there are flags common to both <code>self</code> and …\nReturns <code>true</code> if there are flags common to both <code>self</code> and …\nReturns <code>true</code> if there are flags common to both <code>self</code> and …\nReturns <code>true</code> if there are flags common to both <code>self</code> and …\nReturns <code>true</code> if there are flags common to both <code>self</code> and …\nReturns <code>true</code> if there are flags common to both <code>self</code> and …\nReturns <code>true</code> if there are flags common to both <code>self</code> and …\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\n<code>ioctl(fd, BLKPBSZGET)</code>—Returns the physical block size of …\n<code>ioctl(fd, BLKSSZGET)</code>—Returns the logical block size of a …\n<code>ioctl(fd, FICLONE, src_fd)</code>—Share data between open files.\n<code>ioctl(fd, FIONBIO, &amp;value)</code>—Enables or disables …\n<code>ioctl(fd, FIONREAD)</code>—Returns the number of bytes ready to …\n<code>ioctl(fd, TIOCEXCL)</code>—Enables exclusive mode on a terminal.\n<code>ioctl(fd, TIOCNXCL)</code>—Disables exclusive mode on a …\nReturns <code>true</code> if all flags are currently set.\nReturns <code>true</code> if all flags are currently set.\nReturns <code>true</code> if all flags are currently set.\nReturns <code>true</code> if all flags are currently set.\nReturns <code>true</code> if all flags are currently set.\nReturns <code>true</code> if all flags are currently set.\nReturns <code>true</code> if all flags are currently set.\nReturns <code>true</code> if no flags are currently stored.\nReturns <code>true</code> if no flags are currently stored.\nReturns <code>true</code> if no flags are currently stored.\nReturns <code>true</code> if no flags are currently stored.\nReturns <code>true</code> if no flags are currently stored.\nReturns <code>true</code> if no flags are currently stored.\nReturns <code>true</code> if no flags are currently stored.\nShorthand for <code>std::io::Error::from(self).kind()</code>.\nConstructs a new <code>PollFd</code> holding <code>fd</code> and <code>events</code>.\nCreates a new <code>IoSliceMut</code> wrapping a byte slice.\nCreates a new <code>IoSlice</code> wrapping a byte slice.\nReturns the complement of this set of flags.\nReturns the complement of this set of flags.\nReturns the complement of this set of flags.\nReturns the complement of this set of flags.\nReturns the complement of this set of flags.\nReturns the complement of this set of flags.\nReturns the complement of this set of flags.\n<code>pipe()</code>—Creates a pipe.\n<code>pipe2(flags)</code>—Creates a pipe, with flags.\n<code>poll(self.fds, timeout)</code>\n<code>pread(fd, buf, offset)</code>—Reads from a file at a given …\n<code>preadv(fd, bufs, offset)</code>—Reads from a file at a given …\n<code>preadv2(fd, bufs, offset, flags)</code>—Reads data, with …\n<code>pwrite(fd, bufs)</code>—Writes to a file at a given position.\n<code>pwritev(fd, bufs, offset)</code>—Writes to a file at a given …\n<code>pwritev2(fd, bufs, offset, flags)</code>—Writes data, with …\nExtract the raw OS error number from this error.\n<code>STDERR_FILENO</code>—Standard error, raw.\n<code>STDIN_FILENO</code>—Standard input, raw.\n<code>STDOUT_FILENO</code>—Standard output, raw.\n<code>read(fd, buf)</code>—Reads from a stream.\n<code>readv(fd, bufs)</code>—Reads from a stream into multiple …\nRemoves the specified flags in-place.\nRemoves the specified flags in-place.\nRemoves the specified flags in-place.\nRemoves the specified flags in-place.\nRemoves the specified flags in-place.\nRemoves the specified flags in-place.\nRemoves the specified flags in-place.\nCall <code>f</code> until it either succeeds or fails other than …\nReturns the ready events.\nInserts or removes the specified flags depending on the …\nInserts or removes the specified flags depending on the …\nInserts or removes the specified flags depending on the …\nInserts or removes the specified flags depending on the …\nInserts or removes the specified flags depending on the …\nInserts or removes the specified flags depending on the …\nInserts or removes the specified flags depending on the …\nSets the contained file descriptor to <code>fd</code>.\n<code>splice(fd_in, off_in, fd_out, off_out, len, flags)</code>…\n<code>STDERR_FILENO</code>—Standard error, borrowed.\n<code>STDIN_FILENO</code>—Standard input, borrowed.\n<code>STDOUT_FILENO</code>—Standard output, borrowed.\nReturns the set difference of the two sets of flags.\nReturns the set difference of the two sets of flags.\nReturns the set difference of the two sets of flags.\nReturns the set difference of the two sets of flags.\nReturns the set difference of the two sets of flags.\nReturns the set difference of the two sets of flags.\nReturns the set difference of the two sets of flags.\nDisables all flags enabled in the set.\nDisables all flags enabled in the set.\nDisables all flags enabled in the set.\nDisables all flags enabled in the set.\nDisables all flags enabled in the set.\nDisables all flags enabled in the set.\nDisables all flags enabled in the set.\nReturns the symmetric difference between the flags in <code>self</code> …\nReturns the symmetric difference between the flags in <code>self</code> …\nReturns the symmetric difference between the flags in <code>self</code> …\nReturns the symmetric difference between the flags in <code>self</code> …\nReturns the symmetric difference between the flags in <code>self</code> …\nReturns the symmetric difference between the flags in <code>self</code> …\nReturns the symmetric difference between the flags in <code>self</code> …\n<code>STDERR_FILENO</code>—Standard error, owned.\n<code>STDIN_FILENO</code>—Standard input, owned.\n<code>STDOUT_FILENO</code>—Standard output, owned.\nToggles the specified flags in-place.\nToggles the specified flags in-place.\nToggles the specified flags in-place.\nToggles the specified flags in-place.\nToggles the specified flags in-place.\nToggles the specified flags in-place.\nToggles the specified flags in-place.\nReturns the union of between the flags in <code>self</code> and <code>other</code>.\nReturns the union of between the flags in <code>self</code> and <code>other</code>.\nReturns the union of between the flags in <code>self</code> and <code>other</code>.\nReturns the union of between the flags in <code>self</code> and <code>other</code>.\nReturns the union of between the flags in <code>self</code> and <code>other</code>.\nReturns the union of between the flags in <code>self</code> and <code>other</code>.\nReturns the union of between the flags in <code>self</code> and <code>other</code>.\n<code>vmsplice(fd, bufs, flags)</code>—Transfer data between memory …\n<code>write(fd, buf)</code>—Writes to a stream.\n<code>writev(fd, bufs)</code>—Writes to a stream from multiple …\n<code>EPOLL_CLOEXEC</code>\n<code>EPOLL_*</code> for use with [<code>Epoll::new</code>].\n<code>EPOLLERR</code>\n<code>EPOLLET</code>\n<code>EPOLLEXCLUSIVE</code>\n<code>EPOLL*</code> for use with [<code>Epoll::add</code>].\nA vector of <code>Event</code>s, plus context for interpreting them.\n<code>EPOLLHUP</code>\n<code>EPOLLIN</code>\nAn iterator over the <code>Event</code>s in an <code>EventVec</code>.\n<code>EPOLLMSG</code>\n<code>EPOLLONESHOT</code>\n<code>EPOLLOUT</code>\n<code>EPOLLPRI</code>\n<code>EPOLLRDBAND</code>\n<code>EPOLLRDHUP</code>\n<code>EPOLLRDNORM</code>\n<code>EPOLLWAKEUP</code>\n<code>EPOLLWRBAND</code>\n<code>EPOLLWRNORM</code>\nReturns the set containing all flags.\nReturns the set containing all flags.\nReturns the intersection between the two sets of flags.\nReturns the intersection between the two sets of flags.\nDisables all flags disabled in the set.\nDisables all flags disabled in the set.\nReturns the union of the two sets of flags.\nReturns the union of the two sets of flags.\nAdds the set of flags.\nAdds the set of flags.\nReturns the raw value of the flags currently stored.\nReturns the raw value of the flags currently stored.\nReturns the left flags, but with all the right flags …\nReturns the left flags, but with all the right flags …\nToggles the set of flags.\nToggles the set of flags.\nReturns the current <code>Event</code> capacity of this <code>EventVec</code>.\nClears all the <code>Events</code> out of this <code>EventVec</code>.\nReturns the complement of this set of flags.\nReturns the complement of this set of flags.\nReturns <code>true</code> if all of the flags in <code>other</code> are contained …\nReturns <code>true</code> if all of the flags in <code>other</code> are contained …\nReturns the difference between the flags in <code>self</code> and <code>other</code>.\nReturns the difference between the flags in <code>self</code> and <code>other</code>.\nReturns an empty set of flags.\nReturns an empty set of flags.\n<code>epoll_ctl(self, EPOLL_CTL_ADD, data, event)</code>—Adds an …\n<code>epoll_create1(flags)</code>—Creates a new <code>Epoll</code>.\n<code>epoll_ctl(self, EPOLL_CTL_DEL, target, NULL)</code>—Removes an …\n<code>epoll_ctl(self, EPOLL_CTL_MOD, target, event)</code>—Modifies …\n<code>epoll_wait(self, events, timeout)</code>—Waits for registered …\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nConvert from underlying bit representation, unless that …\nConvert from underlying bit representation, unless that …\nConvert from underlying bit representation, dropping any …\nConvert from underlying bit representation, dropping any …\nConvert from underlying bit representation, preserving all …\nConvert from underlying bit representation, preserving all …\nInserts the specified flags in-place.\nInserts the specified flags in-place.\nReturns the intersection between the flags in <code>self</code> and …\nReturns the intersection between the flags in <code>self</code> and …\nReturns <code>true</code> if there are flags common to both <code>self</code> and …\nReturns <code>true</code> if there are flags common to both <code>self</code> and …\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nReturns <code>true</code> if all flags are currently set.\nReturns <code>true</code> if all flags are currently set.\nTests whether this <code>EventVec</code> is logically empty.\nReturns <code>true</code> if no flags are currently stored.\nReturns <code>true</code> if no flags are currently stored.\nReturns an iterator over the <code>Event</code>s in this <code>EventVec</code>.\nReturns the number of <code>Event</code>s logically contained in this …\nReturns the complement of this set of flags.\nReturns the complement of this set of flags.\nRemoves the specified flags in-place.\nRemoves the specified flags in-place.\nReserves enough memory for at least <code>additional</code> more <code>Event</code>s.\nReserves enough memory for exactly <code>additional</code> more <code>Event</code>s.\nInserts or removes the specified flags depending on the …\nInserts or removes the specified flags depending on the …\nShrinks the capacity of this <code>EventVec</code> as much as possible.\nReturns the set difference of the two sets of flags.\nReturns the set difference of the two sets of flags.\nDisables all flags enabled in the set.\nDisables all flags enabled in the set.\nReturns the symmetric difference between the flags in <code>self</code> …\nReturns the symmetric difference between the flags in <code>self</code> …\nToggles the specified flags in-place.\nToggles the specified flags in-place.\nReturns the union of between the flags in <code>self</code> and <code>other</code>.\nReturns the union of between the flags in <code>self</code> and <code>other</code>.\nConstructs an <code>EventVec</code> with memory for <code>capacity</code> <code>Event</code>s.\n<code>TC*</code> values for use with <code>tcflow</code>.\n<code>TC*</code> values for use with <code>tcflow</code>.\n<code>B0</code>\n<code>B1000000</code>\n<code>B110</code>\n<code>B115200</code>\n<code>B1152000</code>\n<code>B1200</code>\n<code>B134</code>\n<code>B150</code>\n<code>B1500000</code>\n<code>B1800</code>\n<code>B19200</code>\n<code>B200</code>\n<code>B2000000</code>\n<code>B230400</code>\n<code>B2400</code>\n<code>B2500000</code>\n<code>B300</code>\n<code>B3000000</code>\n<code>B3500000</code>\n<code>B38400</code>\n<code>B4000000</code>\n<code>B460800</code>\n<code>B4800</code>\n<code>B50</code>\n<code>B500000</code>\n<code>B57600</code>\n<code>B576000</code>\n<code>B600</code>\n<code>B75</code>\n<code>B921600</code>\n<code>B9600</code>\n<code>BOTHER</code>\n<code>BRKINT</code>\n<code>BS0</code>\n<code>BS1</code>\n<code>BSDLY</code>\n<code>CBAUD</code>\n<code>CBAUDEX</code>\n<code>CIBAUD</code>\n<code>CLOCAL</code>\n<code>CMSPAR</code>\n<code>CR0</code>\n<code>CR1</code>\n<code>CR2</code>\n<code>CR3</code>\n<code>CRDLY</code>\n<code>CREAD</code>\n<code>CRTSCTS</code>\n<code>CS5</code>\n<code>CS6</code>\n<code>CS7</code>\n<code>CS8</code>\n<code>CSIZE</code>\n<code>CSTOPB</code>\n<code>TCSADRAIN</code>—Make the change after all output has been …\n<code>TCSADRAIN</code>—Make the change after all output has been …\n<code>ECHO</code>\n<code>ECHOCTL</code>\n<code>ECHOE</code>\n<code>ECHOK</code>\n<code>ECHOKE</code>\n<code>ECHONL</code>\n<code>ECHOPRT</code>\n<code>EXTA</code>\n<code>EXTB</code>\n<code>EXTPROC</code>\n<code>FF0</code>\n<code>FF1</code>\n<code>FFDLY</code>\n<code>FLUSHO</code>\n<code>TCSAFLUSH</code>—Discard any pending input and then make the …\n<code>TCSAFLUSH</code>—Discard any pending input and then make the …\n<code>HUPCL</code>\n<code>ICANON</code>—A flag for the <code>c_lflag</code> field of <code>Termios</code> indicating\n<code>ICRNL</code>\n<code>IEXTEN</code>\n<code>TCIFLUSH</code>—Flush data received but not read.\n<code>TCIFLUSH</code>—Flush data received but not read.\n<code>IGNBRK</code>\n<code>IGNCR</code>\n<code>IGNPAR</code>\n<code>IMAXBEL</code>\n<code>INLCR</code>\n<code>INPCK</code>\n<code>TCIOFLUSH</code>—<code>IFlush</code> and <code>OFlush</code> combined.\n<code>TCIOFLUSH</code>—<code>IFlush</code> and <code>OFlush</code> combined.\n<code>TCIOFF</code>—Transmits a STOP byte.\n<code>TCIOFF</code>—Transmits a STOP byte.\n<code>TCION</code>—Transmits a START byte.\n<code>TCION</code>—Transmits a START byte.\n<code>ISIG</code>\n<code>ISTRIP</code>\n<code>IUCLC</code>\n<code>IUTF8</code>\n<code>IXANY</code>\n<code>IXOFF</code>\n<code>IXON</code>\n<code>NL0</code>\n<code>NL1</code>\n<code>NLDLY</code>\n<code>NOFLSH</code>\n<code>TCSANOW</code>—Make the change immediately.\n<code>TCSANOW</code>—Make the change immediately.\n<code>OCRNL</code>\n<code>OFDEL</code>\n<code>OFILL</code>\n<code>TCOFLUSH</code>—Flush data written but not transmitted.\n<code>TCOFLUSH</code>—Flush data written but not transmitted.\n<code>OLCUC</code>\n<code>ONLCR</code>\n<code>ONLRET</code>\n<code>ONOCR</code>\n<code>TCOOFF</code>—Suspend output.\n<code>TCOOFF</code>—Suspend output.\n<code>TCOON</code>—Restart suspended output.\n<code>TCOON</code>—Restart suspended output.\n<code>OPOST</code>\n<code>TCSA*</code> values for use with <code>tcsetattr</code>.\n<code>TCSA*</code> values for use with <code>tcsetattr</code>.\n<code>PARENB</code>\n<code>PARMRK</code>\n<code>PARODD</code>\n<code>PENDIN</code>\n<code>TC*</code> values for use with <code>tcflush</code>.\n<code>TC*</code> values for use with <code>tcflush</code>.\n<code>speed_t</code>—A return type for <code>cfsetspeed</code> and similar.\n<code>speed_t</code>—A return type for <code>cfsetspeed</code> and similar.\n<code>TAB0</code>\n<code>TAB1</code>\n<code>TAB2</code>\n<code>TAB3</code>\n<code>TABDLY</code>\n<code>TOSTOP</code>\n<code>tcflag_t</code>—A type for the flags fields of <code>Termios</code>.\n<code>tcflag_t</code>—A type for the flags fields of <code>Termios</code>.\n<code>struct termios</code> for use with <code>tcgetattr</code> and <code>tcsetattr</code>.\n<code>struct termios</code> for use with <code>tcgetattr</code> and <code>tcsetattr</code>.\n<code>struct termios2</code> for use with <code>tcgetattr2</code> and <code>tcsetattr2</code>.\n<code>struct termios2</code> for use with <code>tcgetattr2</code> and <code>tcsetattr2</code>.\n<code>VDISCARD</code>\n<code>VEOF</code>\n<code>VEOL</code>\n<code>VEOL2</code>\n<code>VERASE</code>\n<code>VINTR</code>\n<code>VKILL</code>\n<code>VLNEXT</code>\n<code>VMIN</code>\n<code>VQUIT</code>\n<code>VREPRINT</code>\n<code>VSTART</code>\n<code>VSTOP</code>\n<code>VSUSP</code>\n<code>VSWTC</code>\n<code>VT0</code>\n<code>VT1</code>\n<code>VTDLY</code>\n<code>VTIME</code>\n<code>VWERASE</code>\n<code>struct winsize</code> for use with <code>tcgetwinsize</code>.\n<code>struct winsize</code> for use with <code>tcgetwinsize</code>.\n<code>XCASE</code>\n<code>XTABS</code>\n<code>cfgetispeed(termios)</code>\n<code>cfgetospeed(termios)</code>\n<code>cfmakeraw(termios)</code>\n<code>cfsetispeed(termios, speed)</code>\n<code>cfsetospeed(termios, speed)</code>\n<code>cfsetspeed(termios, speed)</code>\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\n<code>isatty(fd)</code>—Tests whether a file descriptor refers to a …\nTranslate from a <code>Speed</code> code to a speed value <code>u32</code>.\n<code>tcdrain(fd, duration)</code>—Wait until all pending output has …\n<code>tcflow(fd, action)</code>—Suspend or resume transmission or …\n<code>tcflush(fd, queue_selector)</code>—Wait until all pending …\n<code>tcgetattr(fd)</code>—Get terminal attributes.\n<code>tcgetattr2(fd)</code>—Get terminal attributes.\n<code>tcgetpgrp(fd)</code>—Get the terminal foreground process group.\n<code>tcgetsid(fd)</code>—Return the session ID of the current …\n<code>tcgetwinsize(fd)</code>—Get the current terminal window size.\n<code>tcsendbreak(fd, 0)</code>—Transmit zero-valued bits.\n<code>tcsetattr(fd)</code>—Set terminal attributes.\n<code>tcsetattr2(fd)</code>—Set terminal attributes.\n<code>tcsetpgrp(fd, pid)</code>—Set the terminal foreground process …\n<code>tcsetwinsize(fd)</code>—Set the current terminal window size.")
searchState.loadedDescShard("sts", 0, "Additional files/directories to watch. Any change to the …\nThe fragment shader source path.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nAn additional texture to provide to the shader.\nA fullscreen effect is a reloadable fragment shader that …\nUse builder syntax to set the inputs and finish with …\nFinishes building and performs the requested action.\n<em><strong>Required.</strong></em>\nDraws the fullscreen effect.\n<em><strong>Required.</strong></em>\n<em><strong>Required.</strong></em>\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nTools for manipulating the type state of …\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nRebuilds th effect pipeline.\n<em><strong>Required.</strong></em>\n<em><strong>Required.</strong></em>\nType state of the member <code>ctx</code>.\nType state of the member <code>effect_shader</code>.\nRepresents a <code>State</code> that has <code>IsUnset</code> implemented for all …\nType state of the member <code>frames_in_flight</code>.\nMarker trait that indicates that all required members are …\nMarker trait that indicates that the member is set, i.e. …\nMarker trait that indicates that the member is unset, i.e. …\nType state of the member <code>render_pass</code>.\nRepresents a <code>State</code> that has <code>IsSet</code> implemented for …\nRepresents a <code>State</code> that has <code>IsSet</code> implemented for …\nRepresents a <code>State</code> that has <code>IsSet</code> implemented for …\nRepresents a <code>State</code> that has <code>IsSet</code> implemented for …\nRepresents a <code>State</code> that has <code>IsSet</code> implemented for …\nBuilder’s type state specifies if members are set or not …\nType state of the member <code>texture_atlas_layout</code>.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.")
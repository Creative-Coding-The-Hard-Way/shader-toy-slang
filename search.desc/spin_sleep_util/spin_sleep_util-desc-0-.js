searchState.loadedDescShard("spin_sleep_util", 0, "Utils using spin_sleep.\nTicks as fast as possible until caught up.\nTick at multiples of <code>period</code> from when <code>tick</code> was called, …\nInterval returned by <code>interval</code> and <code>interval_at</code>.\nDefines the behavior of an <code>Interval</code> when it misses a tick.\nHelper for regularly reporting a rate per second, like fps.\nSkips missed ticks and tick on the next multiple of <code>period</code> …\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nIncrement the rate count for the next report.\n<code>Self::increment</code> and <code>Self::report</code>.\nCreates new <code>Interval</code> that spin-sleeps with interval of …\nCreates new <code>Interval</code> that spin-sleeps with interval of …\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nReturns the <code>MissedTickBehavior</code> strategy currently being …\nReturns a new <code>RateReporter</code> with the given <code>report_period</code> …\nReturns the period of the interval.\nIf at least <code>report_period</code> has elapsed since the last …\nResets the scheduled next tick to one period after the …\nReset rate count to zero &amp; report start to now.\nSets the <code>MissedTickBehavior</code> strategy that should be used.\nSets a new period.\nSets the <code>SpinSleeper</code> used for accurate sleeping.\nReturns the configured <code>SpinSleeper</code>.\nUse <code>SpinSleeper::sleep</code> to sleep until the next scheduled …\nUse <code>spin_sleep::native_sleep</code> to sleep until the next …\nReturns <code>Self</code> with the specified <code>MissedTickBehavior</code> …\nReturns <code>Self</code> with the specified <code>SpinSleeper</code>.")
searchState.loadedDescShard("v_frame", 0, "Represents a raw video frame\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCreates a new frame with the given parameters.\nPlanes constituting the frame.\nTrait for casting between primitive types.\nChroma subsampling format\nMonochrome.\nBoth vertically and horizontally subsampled.\nHorizontally subsampled.\nNot subsampled.\nA type that can be used as a pixel type.\nTypes that can be used as pixel types.\n10 or 12 bits per pixel, stored in a <code>u16</code>.\n8 bits per pixel, stored in a <code>u8</code>.\nCasts the given value into <code>Self</code>.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalculates the size of a chroma plane for this sampling …\nProvides the amount to right shift the luma plane …\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nConverts stride in pixels to stride in bytes.\nReturns a <code>PixelType</code> variant corresponding to this type.\nOne data plane of a frame.\nPlane-specific configuration.\nBacking buffer for the Plane data\nIterator over plane pixels, skipping padding.\nAbsolute offset in pixels inside a plane\nChecks if <code>add_y</code> and <code>add_x</code> lies in the allocated bounds of …\nChecks if -<code>sub_x</code> and -<code>sub_y</code> lies in the allocated bounds …\nAllocated height in pixels.\nPlane configuration.\nCopies data into the plane from a pixel array.\nCopies data from a plane into a pixel array.\nReturns plane data starting from the origin.\nReturns mutable plane data starting from the origin.\nReturns plane with half the resolution for width and …\nReturns a plane downscaled from the source plane by a …\nDownscales the source plane by a factor of <code>scale</code>, writing …\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nPanics\nA slice starting i pixels to the left of the current one.\nA slice starting i pixels above the current one.\nHeight in pixels.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nIterates over the pixels in the plane, skipping the …\nAllocates and returns a new plane.\nCreates a new iterator.\nReturns the pixel at the given coordinates.\nMinimally test that the plane has been padded.\nReturn a line\nThis version of the function includes the padding on the …\nThis version of the function crops off the padding on the …\nThis version of the function includes the padding on the …\nThis version of the function crops off the padding on the …\nIterates over the lines of the plane\nData stride.\nWidth in pixels.\nDecimator along the X axis.\nX where the data starts.\nNumber of padding pixels on the right.\nDecimator along the Y axis.\nY where the data starts.\nNumber of padding pixels on the bottom.")